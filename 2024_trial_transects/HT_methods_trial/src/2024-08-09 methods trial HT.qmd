---
title: "DeAD Transect Methods Development"
author: "Heather Throop"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## ReadMe

Initial Date: 2024-08-09\
Revisions:\
2024-08-11 HT\
\
Purpose: This is a test of hypothetical data to assess different transect methods.

Dataset "FakeData1" is based on the following scenario. Numbers represent LPI points, the horizontal line is the transect line, and scribbles on the transect line are litter. SH = shrub, PG = perennial grass, WD = coarse woody debris, R = rock.

The FakeData1 dataset includes several changes from the LPI data collected with standard methods. \
- The upper layer is classified based on the presence of a canopy, regardless of whether the pin hits or not.\
- An additional variable "Microsite" is collected. This is a categorical variable that captures the relevant Litter Retention Element (e.g., coarse woody debris, rock, rill) that may capture litter, regardless of whether the pin actually hits the LRE. \
- Litter depth (mm) is measured whenever a the pin hits litter.

![](images/IMG_1567 copy.jpg)

## SetUp

```{r}
# load needed packages
library(here)
library(tidyverse)
library(stringr)
```

## Load Data

```{r}
#|label: load-dataframes

# load FakeData1 data from Dropbox 
LPI_Fake1 <- read.csv("https://www.dropbox.com/scl/fi/c4xagzzj8o7te00tlstbp/FakeData1.csv?rlkey=t1xy8ig30yzzuhprgp0785jjo&dl=1")

```

## LPI

### TopLayer

TopLayer is the top canopy hit in the LPI data collection scheme.

```{r}
#|label: LPI Top Layer summary

LPI_TopLayer_summary <- LPI_Fake1 |>
  group_by(Line, TopLayer) |>
  summarise(count = n()) |>
  mutate(pct_TopLayer = count / 90 *100) # calculate % TopLayer hits

TopLayer_plot <- ggplot(LPI_TopLayer_summary, aes(x = TopLayer, 
                                         y = pct_TopLayer)) +
  geom_col(fill = "skyblue", color = "black") +
  ylab("Cover (%)") +
  xlab("Top Layer") +
  ggtitle("FakeData1 Top Layer Summary") +
  facet_grid(rows = vars(Line)) +
  theme_minimal()
TopLayer_plot

ggsave(filename = here("output", "LPI_toplayer.jpeg"), plot = TopLayer_plot, device = "jpeg", width = 4, height = 3)
```

### Soil Surface Layer

Soil surface layer is the lowest layer (ground) in the LPI data collection scheme. Note that litter is *not* the soil surface layer. Litter should be on top of the soil surface layer. PerGrass is perennial grass (this can be the surface layer when the pin hits a plant base).

```{r}
#|label: LPI SoilSurface Summary

# summarize the soil surface in terms of % hits from each type
LPI_SoilSurface_summary <- LPI_Fake1 |>
  group_by(SoilSurface) |>
  summarise(count = n()) |>
  mutate(pct_SoilSurface = count / 90*100) # calculate % SoilSurface hits

# plot the soil surface hits data
SoilSurface_plot <- ggplot(LPI_SoilSurface_summary, aes(x = SoilSurface,
                                                y = pct_SoilSurface)) +
  geom_col(fill = "skyblue", color = "black") +
  ylab("Cover (%)") +
  xlab("Surface Layer") +
  ggtitle("FakeData1 Surface Layer") +
  theme_minimal()
SoilSurface_plot

ggsave(filename = here("output", "LPI_surfacelayer.jpeg"), plot = SoilSurface_plot, device = "jpeg", width = 4, height = 3)
```

### SoilSurface relative to TopLayer

```{r}
#|label: Top-vs-Surface-hits

# Calculate the percent of surface layer hits in different top layers.
Top_v_Surface_sum <- LPI_Fake1 |>
  group_by(TopLayer, SoilSurface) |>
  summarise(count = n()) |>
  mutate(TopLayerTotal = sum(count),
         pct_surface_hits = count/TopLayerTotal *100) 
print(Top_v_Surface_sum)

# plot the data
Top_v_Surface_plot <- ggplot(Top_v_Surface_sum, aes(x = SoilSurface,
                                                y = pct_surface_hits)) +
  geom_col(fill = "skyblue", color = "black") +
  ylab("Soil Surface Hits (%)") +
  xlab("Soil Surface Layer") +
  ggtitle("FakeData1 Soil Surface Hits by Top Layer") +
  facet_grid(rows = vars(TopLayer)) + # facet rows are diff TopLayers
  theme_minimal()
Top_v_Surface_plot
```

### Litter presence relative to TopLayer

```{r}
# Calculate the percent of hits with litter in different microsites
LitterPresencesByTopLayer_sum <- LPI_Fake1 |>
  mutate(LitterPresence = ifelse(LitterDepth > 0, "yes","no")) |>
  group_by(TopLayer, LitterPresence) |>
  summarise(count = n()) |>
  mutate(TopLayerTotal = sum(count),
         pct_w_litter = count/TopLayerTotal *100) 
print(LitterPresencesByTopLayer_sum)

# plot the data
LitterPresencesByTopLayer_plot <- LitterPresencesByTopLayer_sum |>
  filter(LitterPresence == "yes") |>
  ggplot(aes(x = TopLayer, y = pct_w_litter)) +
  geom_col(fill = "skyblue", color = "black") +
  ylab("Hits with Litter (%)") +
  xlab("Top Layer") +
  ggtitle("FakeData1: Percent of Hits w/ Litter by TopLayer") +
  theme_minimal()
LitterPresencesByTopLayer_plot
```

### Litter presence relative to microsite

This analysis adds the "microsite" variable included in the FakeData1 hypothetical dataset. Is this added information worthwhile?

```{r}
# Calculate the percent of hits with litter in different microsites
LitterPresencesByMicrosite_sum <- LPI_Fake1 |>
  mutate(LitterPresence = ifelse(LitterDepth > 0, "yes","no")) |>
  group_by(Microsite, LitterPresence) |>
  summarise(count = n()) |>
  mutate(MicrositeTotal = sum(count),
         pct_w_litter = count/MicrositeTotal *100) 
print(LitterPresencesByMicrosite_sum)

# plot the data
LitterPresencesByMicrosite_plot <- LitterPresencesByMicrosite_sum |>
  filter(LitterPresence == "yes") |>
  ggplot(aes(x = Microsite, y = pct_w_litter)) +
  geom_col(fill = "skyblue", color = "black") +
  ylab("Hits with Litter (%)") +
  xlab("Microsite") +
  ggtitle("FakeData1: Percent of Hits w/ Litter by Microsite") +
  theme_minimal()
LitterPresencesByMicrosite_plot
```

### LitterDepth in Different Microsites

This analysis adds the "microsite" and "LitterDepth" variables included in the FakeData1 hypothetical dataset. Is this added information worthwhile?

```{r}
# plot the data
LitterDepth_v_Microsite_plot <- LPI_Fake1 |>
  ggplot(aes(x = Microsite, y = LitterDepth)) +
  geom_boxplot(fill = "skyblue", color = "black") +
  ylab("Litter Depth (mm)") +
  xlab("Microsite") +
  ggtitle("FakeData1 Litter Depth by Microsite") +
  theme_minimal()
LitterDepth_v_Microsite_plot
```

### 
